#!/bin/bash

set -e

if [ $# -eq 0 ]; then
	echo "Usage $0 TEST_CASE [QEMU_ARGS]"
	exit 2
fi

if [ ! -f config.mak ]; then
	echo "run './configure --enable-efi && make' first. See ./configure -h"
	exit 2
fi
source config.mak
source scripts/arch-run.bash
source scripts/common.bash

: "${EFI_SRC:=$(realpath "$(dirname "$0")/../")}"
: "${EFI_UEFI:=/usr/share/qemu-efi-aarch64/QEMU_EFI.fd}"
: "${EFI_TEST:=efi-tests}"
: "${EFI_CASE:=$(basename $1 .efi)}"

if [ ! -f "$EFI_UEFI" ]; then
	echo "UEFI firmware not found: $EFI_UEFI"
	echo "Please install the UEFI firmware to this path"
	echo "Or specify the correct path with the env variable EFI_UEFI"
	exit 2
fi

# Remove the TEST_CASE from $@
shift 1

# Fish out the arguments for the test, they should be the next string
# after the "-append" option
qemu_args=()
cmd_args=()
while (( "$#" )); do
	if [ "$1" = "-append" ]; then
		cmd_args=$2
		shift 2
	else
		qemu_args+=("$1")
		shift 1
	fi
done

if [ "$EFI_CASE" = "_NO_FILE_4Uhere_" ]; then
	EFI_CASE=dummy
fi

: "${EFI_CASE_DIR:="$EFI_TEST/$EFI_CASE"}"
mkdir -p "$EFI_CASE_DIR"

cp "$EFI_SRC/$EFI_CASE.efi" "$EFI_TEST/$EFI_CASE/"
echo "@echo -off" > "$EFI_TEST/$EFI_CASE/startup.nsh"
echo "$EFI_CASE.efi" "${cmd_args[@]}" >> "$EFI_TEST/$EFI_CASE/startup.nsh"

EFI_RUN=y $TEST_DIR/run \
       -bios "$EFI_UEFI" \
       -drive file.dir="$EFI_TEST/$EFI_CASE/",file.driver=vvfat,file.rw=on,format=raw,if=virtio \
       "${qemu_args[@]}"
